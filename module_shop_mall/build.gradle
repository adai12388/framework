if (Boolean.valueOf(rootProject.ext.moduleShopMall)) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
    apply plugin: 'me.tatarka.retrolambda'  //lambda配置
}
apply plugin: 'com.jakewharton.butterknife'

apply plugin: 'org.greenrobot.greendao'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {

                arguments = [moduleName: project.getName()]
            }
        }
        //MultiDex分包方法
        multiDexEnabled true

        //强制前缀
        resourcePrefix "mall_"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //greendao配置
    greendao {
        //版本号，升级时可配置
        schemaVersion 1
        //自定义生成数据库文件的目录
        targetGenDir 'src/main/java'
        //通过gradle插件生成的数据库相关文件的包名，默认为你的entity所在的包名；
        daoPackage 'com.example.tome.module_shop_mall.dao'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
    （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            if (rootProject.ext.moduleShopMall) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    /*implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation rootProject.ext.dependencies["appcompat_v7"]
        implementation rootProject.ext.dependencies["cardview-v7"]
        implementation rootProject.ext.dependencies["recyclerview-v7"]
        implementation rootProject.ext.dependencies["design"]
        implementation rootProject.ext.dependencies["constraint_layout"]
        implementation rootProject.ext.dependencies["support_annotations"]
        testImplementation rootProject.ext.dependencies["junit"]
        androidTestImplementation rootProject.ext.dependencies["runner"]
        androidTestImplementation rootProject.ext.dependencies["espresso_core"]*/
    //Arouter路由
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    //黄油刀
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]

    //垂直的tabLayout
    implementation rootProject.ext.dependencies["VerticalTabLayout"]
    //水平的tabLayout
    implementation rootProject.ext.dependencies["FlycoTabLayout_Lib"]


    //公用依赖包
    implementation project(':component_base')
    implementation project(':component_data')
    implementation project(':baseLib:flowlayout-lib')
    //implementation project(':alertview')
}

